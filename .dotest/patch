---
 app/controllers/posts_controller.rb     |   23 ++++++++++++-----------
 app/helpers/users_helper.rb             |    8 ++++++++
 app/models/post.rb                      |   12 +++++++++++-
 app/models/user.rb                      |   11 ++++-------
 app/views/layouts/application.html.haml |    9 ++++++---
 app/views/posts/_post.html.haml         |   11 +++++++++--
 config/initializers/conventions.rb      |    9 ++++++++-
 config/routes.rb                        |    2 +-
 8 files changed, 59 insertions(+), 26 deletions(-)

diff --git a/app/controllers/posts_controller.rb b/app/controllers/posts_controller.rb
index e194d515cbafb0665323913325b565cf35d100c9..b3f1d7d57fb814169ea68c9f9f8d277ce5f3b130 100644
--- a/app/controllers/posts_controller.rb
+++ b/app/controllers/posts_controller.rb
@@ -1,7 +1,7 @@
 class PostsController < ApplicationController
 
-  before_filter :fetch_post, :only =>   [:edit, :update, :destroy, :publish]
-  before_filter :login_required, :only => [ :new, :update ]
+  before_filter :fetch_post, :only =>   [:edit, :update, :destroy, :publish, :refuse]
+  before_filter :login_required, :only => [ :new, :update, :pending, :publish, :refuse ]
   
   def index    
     respond_to do |format|
@@ -29,7 +29,7 @@ class PostsController < ApplicationController
     @post.user_id = current_user.id
     respond_to do |format| 
       if @post.save
-        flash[:notice] = "Post was successfully created."
+        flash[:notice] = "Post criado como sucesso."
         format.html { redirect_to my_posts_path }
         format.xml  { render :xml => @post, :status => :create }
       else
@@ -40,7 +40,7 @@ class PostsController < ApplicationController
   end
   
   def pending
-    @posts = Post.paginate :page => params[:page] , :per_page => 10, :conditions => {:state => 'pending'}, :order => 'created_at'
+    @posts = Post.paginate_pending :page => params[:page]
     @title = "Posts pendentes"
     render :action => :index
   end
@@ -50,24 +50,25 @@ class PostsController < ApplicationController
     
     respond_to do |format|
       if @post.save
-        flash[:notice] = "Post was successfully published."
+        flash[:notice] = "Publicado com sucesso."
         format.html { redirect_to pending_posts_path }
       else
-        flash[:notice] = "Post was successfully published."
+        flash[:notice] = "Problemas na publicação."
         format.html { redirect_to pending_posts_path }
       end
     end
   end
   
   def refuse
-    @post.authorized_by_id = current_user.id
+    @post.refused_by_id = current_user.id
+    @post.refused_text = params[:post][:refused_text]
     
     respond_to do |format|
       if @post.save
-        flash[:notice] = "Post was successfully published."
+        flash[:notice] = "Rejeitado com sucesso."
         format.html { redirect_to pending_posts_path }
       else
-        flash[:notice] = "Post was successfully published."
+        flash[:notice] = "Erro ao rejeitar."
         format.html { redirect_to pending_posts_path }
       end
     end
@@ -76,7 +77,7 @@ class PostsController < ApplicationController
   def update
     respond_to do |format| 
       if @post.update_attributes(params[:post])
-        flash[:notice] = "Post was successfully created."
+        flash[:notice] = "Post atualizado com sucesso."
         format.html { redirect_to posts_path }
         format.xml  { head :ok }
       else
@@ -88,7 +89,7 @@ class PostsController < ApplicationController
   
   def destroy
     if @post.destroy
-      flash[:notice] = "Post was successfully deleted"
+      flash[:notice] = "Post apagado com sucesso."
       respond_to do |format|
         format.html { redirect_to posts_path }
         format.xml  { head :ok }
diff --git a/app/helpers/users_helper.rb b/app/helpers/users_helper.rb
index 476a5ae2b0628dfb49db2fd8428c10b09749aa98..835a6bb645f8528eed63076bd2b24fb310da54ec 100644
--- a/app/helpers/users_helper.rb
+++ b/app/helpers/users_helper.rb
@@ -1,2 +1,10 @@
+require 'MD5'
+
 module UsersHelper
+  
+  def avatar_tag(email, size = 40)
+    email ||= ''
+    image_tag("http://www.gravatar.com/avatar/#{MD5::md5(email.downcase)}?size=#{size}", :size => "#{size}x#{size}")
+  end
+  
 end
\ No newline at end of file
diff --git a/app/models/post.rb b/app/models/post.rb
index 978586149a9143b3d2ce0512179fad543ddbb240..6ed8c898a573c8417f1b48515f1c5705b631e934 100644
--- a/app/models/post.rb
+++ b/app/models/post.rb
@@ -21,7 +21,7 @@ class Post < ActiveRecord::Base
   belongs_to :user
   belongs_to :authorized_by, :class_name => "User", :foreign_key => :authorized_by_id
   
-  attr_protected :state, :authorized_by_id, :user_id, :published_at
+  attr_protected :state, :authorized_by_id, :user_id, :published_at, :refused_by_id, :refused_text
   attr_human_name :title => 'Título', :description => 'Texto', :url => "Link"
   
   validates_presence_of :user_id, :url, :title, :description
@@ -48,6 +48,16 @@ class Post < ActiveRecord::Base
     end
   end
   
+  def self.find_pending(query_options = {})
+    with_scope(:find => {:conditions => {:state => 'pending'}, :order => 'created_at'} ) do
+      find(:all, query_options)
+    end
+  end
+  
+  def self.pending_count
+    count(:conditions => {:state => 'pending'})
+  end
+  
   
   private
   
diff --git a/app/models/user.rb b/app/models/user.rb
index 6f033cf521a7aaae730347a52bfc3569c7b7cdc2..4637d5bb18c498830dffaaadd3145728c6594d86 100644
--- a/app/models/user.rb
+++ b/app/models/user.rb
@@ -20,9 +20,8 @@
 
 require 'digest/sha1'
 class User < ActiveRecord::Base
-  # Virtual attribute for the unencrypted password
-  attr_accessor :password
-  attr_accessible :email, :identity_url, :url, :nick
+  
+  attr_accessible :email, :url, :nick
   
   has_many :posts do
     def published; find(:all, :conditions => {:state => "published"}) end
@@ -32,10 +31,6 @@ class User < ActiveRecord::Base
     self.posts.published.size >= 10
   end
   
-  def any_url
-    url.blank? ? identity_url : url
-  end
-  
   def remember_token?
     remember_token_expires_at && Time.now.utc < remember_token_expires_at 
   end
@@ -63,6 +58,8 @@ class User < ActiveRecord::Base
   
 end
 
+  # # Virtual attribute for the unencrypted password
+  # attr_accessor :password
   # validates_presence_of     :login, :email
   # validates_presence_of     :password,                   :if => :password_required?
   # validates_presence_of     :password_confirmation,      :if => :password_required?
diff --git a/app/views/layouts/application.html.haml b/app/views/layouts/application.html.haml
index 9497df78f9a5fcf0051e0e8dcdf993465a970ef6..a7120745649ee9a037428ecabd1eb5da5b1c1a5b 100644
--- a/app/views/layouts/application.html.haml
+++ b/app/views/layouts/application.html.haml
@@ -2,8 +2,10 @@
 !!! 1.1
 %html
   %head
-    %title Ruby.aOnda.com
-    = stylesheet_link_tag  "reset", "style", "960", "text" 
+    %title RubyOnda.com
+    = stylesheet_link_tag  "reset", "style", "960", "text"
+    = auto_discovery_link_tag :rss, formatted_posts_url(:rss), :title => 'RubyOnda.com'
+    = javascript_include_tag 'prototype'
   %body
     .container_12
       .grid_8.prefix_2
@@ -19,7 +21,7 @@
             = link_to 'Meus Posts', my_posts_url
             - if current_user.admin?
               \//
-              = link_to 'Pendentes', pending_posts_url
+              = link_to "Pendentes(#{Post.pending_count})", pending_posts_url
             \//
             = link_to 'Sair', logout_url, :method => :delete
           - else
@@ -30,6 +32,7 @@
             = link_to "Ruby Onda", root_path
       .grid_8.prefix_2
         = flash[:notice]
+        = flash[:error]
         = yield
       .grid_8.prefix_2.footer
         = render :partial => 'shared/footer' 
diff --git a/app/views/posts/_post.html.haml b/app/views/posts/_post.html.haml
index 6d147d5bdacf8b2b14e3014444e35cc60bb55acc..17280915c0bc276dd02681280ae784ee2e170c08 100644
--- a/app/views/posts/_post.html.haml
+++ b/app/views/posts/_post.html.haml
@@ -8,10 +8,17 @@
     - if logged_in? && current_user.admin? && post.pending?
       %p
         = link_to 'Publicar', publish_post_url(post), :method => :post
-        =# link_to_function 'Recusar', "alert('Recusando!')"
+        = link_to_function 'Rejeitar', "$('refuse_#{dom_id(post)}').show(); $('link_refuse_#{dom_id(post)}').hide()", :id => "link_refuse_#{dom_id(post)}"
+        - form_for post, :url => refuse_post_url(post), :html => {:style => "display: none", :id => "refuse_#{dom_id(post)}", :method => :post} do |f|
+          = f.text_area :refused_text, :size => "50x10"
+          %br
+          = submit_tag "Rejeitar"
+          ou
+          = link_to_function "Cancelar", "$('refuse_#{dom_id(post)}').hide(); $('link_refuse_#{dom_id(post)}').show()"
+    = avatar_tag(post.user.email)
     .owner_time
       postado por
-      = link_to_unless post.user.any_url.blank?, post.user.nick, post.user.any_url
+      = link_to_unless post.user.url.blank?, post.user.nick, post.user.url
       = link_to('(perfil)', edit_user_url(post.user)) if logged_in? && current_user.admin?
       às
       = post.posted_at.strftime("%H:%M")
diff --git a/config/initializers/conventions.rb b/config/initializers/conventions.rb
index 913282b65ba2a307ef761588f73e435bb44efc88..a09877b7b0f23c4c2a90c5a3cbb25d1429af22ce 100644
--- a/config/initializers/conventions.rb
+++ b/config/initializers/conventions.rb
@@ -1,2 +1,9 @@
 WillPaginate::ViewHelpers.pagination_options[:prev_label] = '&laquo;  Página Anterior'
-WillPaginate::ViewHelpers.pagination_options[:next_label] = 'Próxima Página &raquo;'
\ No newline at end of file
+WillPaginate::ViewHelpers.pagination_options[:next_label] = 'Próxima Página &raquo;'
+
+OpenIdAuthentication::Result::ERROR_MESSAGES = {
+      :missing      => "Servidor OpenID não encontrado",
+      :canceled     => "A verificação do OpenID foi cancelada",
+      :failed       => "A verificação do OpenID falhou",
+      :setup_needed => "A verificação do OpenID precisa ser configurada"
+    }
\ No newline at end of file
diff --git a/config/routes.rb b/config/routes.rb
index 2966dfbe3ed01c033f649040ab65f7db468de43a..900e4dff8a51c4d15ab256c30b63854ea50a68d3 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -9,7 +9,7 @@ ActionController::Routing::Routes.draw do |map|
     sessions.logout "logout", :action => "destroy", :conditions => {:method => :delete}
   end
 
-  map.resources :posts, :collection => {:pending => :get, :my => :get}, :member => {:publish => :post}
+  map.resources :posts, :collection => {:pending => :get, :my => :get}, :member => {:publish => :post, :refuse => :post}
   map.resources :users
   map.profile 'profile', :controller => "users", :action => "edit"
 
-- 
1.5.4.5

